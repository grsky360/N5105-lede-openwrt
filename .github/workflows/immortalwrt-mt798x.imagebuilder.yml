name: Build immortalwrt-mt798x image builder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  CONFIG: immortalwrt-mt798x.imagebuilder.config
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.actor == 'seiry'
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt update
        sudo apt install -y -qq ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache clang clangd cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
        g++-multilib git gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev \
        libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libreadline-dev \
        libssl-dev libtool lld lldb lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 \
        python3 python3-pip python3-ply python-docutils qemu-utils re2c rsync scons squashfs-tools subversion swig \
        texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev  
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: clone repo
      working-directory: /workdir
      run: |
        git clone --depth=1 https://github.com/hanwckf/immortalwrt-mt798x.git
    
    - name: Set up Upterm
      if: github.event.inputs.ssh == 'true'
      id: upterm
      uses: lhotari/action-upterm@v1
      with:
        wait-timeout-minutes: 5
        limit-access-to-actor: true
        limit-access-to-users: seiry

    - name: Print SSH connection command
      if: github.event.inputs.ssh == 'true'
      run: |
        echo "SSH connection command: ${{ steps.upterm.outputs.ssh }}"
      
    - name: Copy config
      run: |
        [ -e $CONFIG ] && mv $CONFIG /workdir/immortalwrt-mt798x/.config

    - name: Build
      working-directory: /workdir/immortalwrt-mt798x
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig
        make download -j$(nproc)
        make -j$(nproc) || make -j1 V=s

    - name: Organize files
      id: organize
      working-directory: /workdir
      run: |
        cd bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV


    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: firmware${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
