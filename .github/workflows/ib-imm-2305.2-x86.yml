name: Build x86 immwrt2305.2 using image builder

on:
  repository_dispatch:
  workflow_dispatch:
        
env:
  IB_URL: https://downloads.immortalwrt.org/releases/23.05.2/targets/x86/64/immortalwrt-imagebuilder-23.05.2-x86-64.Linux-x86_64.tar.xz
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt install build-essential libncurses-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 python3-distutils curl qemu-utils
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Download file
      run: |
        curl -L -o imagebuilder.tar.xz $IB_URL

    - name: Unpack file
      run: |
        tar -xvf imagebuilder.tar.xz --strip-components=1 -C /workdir

    # - name: copy files
    #   run: |
    #     [ -e $RXTRA_FILES ] && mv $RXTRA_FILES /workdir/files
    # - name: download ipks
    #   working-directory: /workdir
    #   run: |
    #     mkdir packages && cd packages
    #     wget https://github.com/vernesong/OpenClash/releases/download/v0.45.157-beta/luci-app-openclash_0.45.157-beta_all.ipk

    - name: run build
      id: compile
      working-directory: /workdir
      run: |
        make image -j$(nproc) \
        PROFILE="x86_64" \
        PACKAGES="alsa-utils autocore automount base-files block-mount busybox ca-bundle default-settings-chn dnsmasq-full dropbear fdisk firewall4 fstools grub2-bios-setup ipv6helper kmod-8139cp kmod-8139too kmod-ac97 kmod-amazon-ena kmod-amd-xgbe kmod-bnx2 kmod-button-hotplug kmod-e1000 kmod-e1000e kmod-forcedeth kmod-fs-f2fs kmod-fs-vfat kmod-i40e kmod-igb kmod-igbvf kmod-igc kmod-ixgbe kmod-ixgbevf kmod-nf-nathelper kmod-nf-nathelper-extra kmod-nft-offload kmod-pcnet32 kmod-r8101 kmod-r8125 kmod-r8168 kmod-sound-hda-codec-hdmi kmod-sound-hda-codec-realtek kmod-sound-hda-codec-via kmod-sound-hda-core kmod-sound-hda-intel kmod-sound-i8x0 kmod-sound-via82xx kmod-tg3 kmod-tulip kmod-usb-audio kmod-usb-hid kmod-usb-net kmod-usb-net-asix kmod-usb-net-asix-ax88179 kmod-usb-net-rtl8150 kmod-usb-net-rtl8152-vendor kmod-vmxnet3 libc libgcc libustream-openssl logd luci luci-app-opkg luci-compat luci-lib-base luci-lib-fs luci-lib-ipkg mkf2fs mtd netifd nftables opkg partx-utils ppp ppp-mod-pppoe procd procd-seccomp procd-ujail uci uclient-fetch urandom-seed urngd luci-i18n-lxc-zh-cn luci-i18n-ttyd-zh-cn  luci-app-openclash luci-app-dockerman luci-i18n-diskman-zh-cn kmod-nft-tproxy  kmod-tun  luci-compat kmod-inet-diag luci-theme-argon htop git curl zsh vim " \
        FILES="files"

    - name: Organize files
      id: organize
      working-directory: /workdir
      run: |
        cd bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV


    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: firmware${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
